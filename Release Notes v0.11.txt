0.11 Release Notes

New public interfaces:
    IBsonSerializationOptions
    IExtraElementsMemberConvention
    IMongoGeoNearOptions

New public classes classes:
    BsonExtraElementsAttributes
    NamedExtraElementsMemberConvention
    DateTimeSerializationOptions
    DocumentSerializationOptions
    RepresentationSerializationOptions
    TruncationException
    BsonBaseReader
    BsonDocumentReader
    BsonDocumentWriter
    JsonOutputMode (renamed, was BsonJsonOutputMode)
    JsonReader
    JsonWriter (renamed, was BsonJsonWriter)
    JsonWriterSettings (renamed, was BsonJsonWriterSettings)
    GeoNearOptionsBuilder
    GeoNearOptionsDocument
    GeoNearOptionsWrapper
    MongoServerSettings
    MongoDatabaseSettings
    MongoCollectionSettings

BsonRepresentationAttribute
    added AllowOverflow
    added AllowTruncation

ConventionProfile
    added ExtraElementsMemberConvention
    added SetExtraElementsMemberConvention

BooleanSerializer
DoubleSerializer
GuidSerializer
Int16Serializer
Int32Serializer
Int64Serializer
ObjectIdSerializer
BsonBinaryDataSerializer
BsonBooleanSerializer
BsonDoubleSerializer
BsonInt32Serializer
BonsInt64Serializer
BsonObjectIdSerializer
BsonSymbolSerializer
BitArraySerializer
ByteArraySerializer
ByteSerializer
CultureInfoSerializer
DateTimeOffsetSerializer
DecimalSerializer
SByteSerializer
SingleSerializer
UInt16Serializer
UInt32Serializer
UInt64Serializer
    added support for RepresentationSerializationOptions

BsonSerializer
    RegisterSerializer uses only type
    Serialize now takes an options parameter

DateTimeSerializer
BsonDateTimeSerializer
    added support for DateTimeSerializationOptions

BsonDocumentSerializer
BsonDocumentWrapperSerializer
    added support for DocumentSerializationOptions

BsonClassMap
    added support for extra elements member

BsonClassMapSerializer
    added support for extra elements member
    added support for serialization options

BsonReader
    removed FindElement
    GetBookmark and ReturnToBookmark now use abstract BsonReaderBookmark class

BsonDocument
    added Wrap and WrapMultiple methods
    added support for DocumentSerializationOptions

BsonDocumentWrapper
    added support for serialization options

Singletons renamed Instance

BsonValue
    now implements IConvertible

BsonExtensionMethods
    added overloads of ToBson, ToJson and ToBsonDocument that take options parameter

MapReduceOptions
    added MapReduceOutput helper class

Query builder
    Query.And now rewrites some queries that used to result in duplicate element name exceptions
    added Near methods
    added WithinCircle and WithinRectangle methods


Update builder
    added Pull(name, query) overload
    added PullAllWrapped methods
    added PullWrapped method
    added PushAllWrapped methods
    added PushWrapped method
    added SetWrapped method

CommandResult
    no longer a subclass of BsonDocument
    instead has Response property of type BsonDocument

FindAndModifyResult
    renamed Document property to ModifiedDocument
    renamed GetDocument method to GetModifiedDocument

GeoNearResult
    implemented
    added GeoNearHits and GeoNearHit helper classes
    added GeoNearStats helper class

MapReduceResults
    moved file to CommandResults folder
    renamed ResultCollectionName to CollectionName
    added InlineResults property

MongoCollection
    public properties and methods are virtual to support mock object unit testing
    added settings field (replaces safeMode and assignIdOnInsert)
    added overload of GeoNearAs that takes options parameter
    added GeoNear methods to MongoCollection<TDefaultDocument>

MongoConnectionStringBuilder
    use only if you want to use .NET connection string format
    implemented new connection string options (see MongoUrl)

MongoCursor
    public properties and methods are virtual to support mock object unit testing
    added SlaveOk property
    added SetSlaveOk method

MongoCursorEnumerator
    move class to Internal folder
    use SlaveOk value from cursor instead of from server

MongoDatabase
    public properties and methods are virtual to support mock object unit testing
    added settings field (replaces credentials and safeMode)
    changed key of collections dictionary to MongoCollectionSettings
    added overload of GetCollection that takes settings parameter

MongoServer
    public properties and methods are virtual to support mock object unit testing
    added settings field (replaces credentials and url)
    changed key of servers dictionary to MongoServerSettings
    added MaxDocumentSize
    added MaxMessageLength
    added overload of GetDatabase that takes settings parameter

MongoUrl
MongoUrlBuilder
    added support for new options:
        ConnectTimeout, DefaultCredentials,
        MaxConnectionIdleTime, MaxConnectionLifeTime, MaxConnectionPoolSize, MinConnectionPoolSize,
        SocketTimeout, WaitQueueMultiple, WaitQueueSize, WaitQueueTimeout

DirectConnector
ReplicaSetConnector
    get MaxDocumentSize and MaxMessageLength from server

MongoConnection
    don't connect in constructor (fast construction)
    instead connect on first use

MongoConnectionPool
    implemented wait queue
    implemented min and max size
    implemented recycling of very old connections (max lifetime)
